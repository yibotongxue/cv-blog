name: docs

on:
  # 每当 push 到 main 分支时触发部署
  push:
    branches: [main]
  # 手动触发部署
  workflow_dispatch:

  # 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
          fetch-depth: 0

      # - name: Setup npm
      #   uses: npm/action-setup@v2
      #   with:
      #     # 选择要使用的 pnpm 版本
      #     version: 8
      #     # 使用 pnpm 安装依赖
      #     run_install: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # 选择要使用的 node 版本
          node-version: 20
          # 缓存 pnpm 依赖
          cache: npm

      - name: Install dependencies
        run: npm ci # 或 pnpm install / yarn install / bun install

      # 运行构建脚本
      - name: Build VuePress site
        run: npm run docs:build

      # # 查看 workflow 的文档来获取更多信息
      # # @see https://github.com/crazy-max/ghaction-github-pages
      # - name: Deploy to GitHub Pages
      #   uses: crazy-max/ghaction-github-pages@v4
      #   with:
      #     # 部署到 gh-pages 分支
      #     target_branch: gh-pages
      #     # 部署目录为 VuePress 的默认输出目录
      #     build_dir: docs/.vuepress/dist
      #   env:
      #     # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vueress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
          